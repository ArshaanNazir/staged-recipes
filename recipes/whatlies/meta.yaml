{% set name = "whatlies" %}
{% set version = "0.6.5" %}
{% set build_num = 0 %}
{% set name_ = name|lower %}

######### SET DEPENDENCY VERSION REQUIREMENTS #########

{% set pyver = ">=3.6,<3.8" %}

# base_packages
{% set libver_altair = ">=4.0.1" %} 
{% set libver_bpemb = ">=0.3.0" %}
{% set libver_gensim = "~=3.8.3" %}
{% set libver_matplotlib_base = ">=3.2.0" %}
{% set libver_scikit_learn = ">=0.24.0" %}

# umap_packages
{% set libver_umap_learn = ">=0.4.0" %}
# rasa_packages
{% set libver_rasa = ">=2.7.0" %}
# fasttext_packages
{% set libver_fasttext = "~=0.9.1" %}
# spacy_packages
{% set libver_spacy = ">=3.0.1" %}
{% set libver_spacy_lookups_data = ">=0.3.2" %}
# s2v_packages (+= spacy_packages)
{% set libver_sense2vec = ">=1.0.2" %}
# tf_packages
{% set libver_tensorflow = ">=2.3.0,<2.5" %}
{% set libver_tensorflow_text = ">=2.3.0" %}
{% set libver_tensorflow_hub = ">=0.8.0" %}
# transformers_dep
{% set libver_transformers = ">=4.3.0" %}
# sentence_tfm_dep
{% set libver_sentence_transformers = ">=0.3.8" %}

#######################################################

## Subpackage Build Switches
#  This serves as a meta-level build switch 
#  for the subpackages.

{% set use_all_subpackages = False %}

{% set use_umap_packages = False %}
{% set use_rasa_packages = False %}
{% set use_fasttext_packages = False %}
{% set use_spacy_packages = False %}
{% set use_s2v_packages = False %}
{% set use_tf_packages = False %}
{% set use_transformers_dep = False %}
{% set use_sentence_tfm_dep = True %}

#######################################################


#################### BEGIN RECIPE #####################

package:
  name: {{ name_ }}-meta
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 0b97c2b5b0bbc5c4044278ea8b2d3222cbb125e1fbf7bd854bb7f09b557e13d7

build:
  number: {{ build_num }}

outputs:
  - name: {{ name_ }}
    build:
      noarch: python
    script: build_base.sh
    requirements:
      host:
        - pip
        - python {{ pyver }}
      run:
        - python {{ pyver }}
        # base_packages
        - altair {{ libver_altair }}
        - bpemb {{ libver_bpemb }}
        - gensim {{ libver_gensim }}
        - matplotlib-base {{ libver_matplotlib_base }}
        - scikit-learn {{ libver_scikit_learn }}
      run_constrained:
        # umap_packages
        - umap-learn {{ libver_umap_learn }}
        # rasa_packages
        - rasa {{ libver_rasa }}
        # fasttext_packages
        - fasttext {{ libver_fasttext }}
        # spacy_packages
        - spacy {{ libver_spacy }}
        - spacy-lookups-data {{ libver_spacy_lookups_data }}
        # s2v_packages (+= spacy_packages)
        - sense2vec {{ libver_sense2vec }}
        # tf_packages
        - tensorflow {{ libver_tensorflow }}
        - tensorflow-text {{ libver_tensorflow_text }}
        - tensorflow-hub {{ libver_tensorflow_hub }}
        # transformers_dep
        - transformers {{ libver_transformers }}
        # sentence_tfm_dep
        - sentence-transformers {{ libver_sentence_transformers }}
    test:
      imports:
        - {{ name_ }}
      commands:
        - pip check
      requires:
        - pip

  ### umap_packages
  {% if use_umap_packages is defined %}
  {% if use_umap_packages or use_all_subpackages %}
  {% with subpackage_id = "umap" %}
  - name: {{ name_ }}-{{ subpackage_id }}
    build:
      noarch: generic
      string: {{ build_num }}_{{ subpackage_id }}_extra
    requirements:
      run:
        # RECIPE: 
        # "umap": base_packages + umap_packages
        - {{ name_ }} {{ version }}
        - umap-learn {{ libver_umap_learn }}
    test:
      imports:
        - {{ name_ }}
      commands:
        - pip check
      requires:
        - pip
  {% endwith %}
  {% endif %}
  {% endif %}
  
  ### rasa_packages
  {% if use_rasa_packages is defined %}
  {% if use_rasa_packages or use_all_subpackages %}
  {% with subpackage_id = "rasa" %}
  - name: {{ name_ }}-{{ subpackage_id }}
    build:
      ## NOTE: rasa is not available on conda-forge
      ## skip: True  # [win or osx or unix]
      noarch: generic
      string: {{ build_num }}_{{ subpackage_id }}_extra
    requirements:
      run:
        # RECIPE: 
        # "rasa": base_packages + rasa_packages
        - {{ name_ }} {{ version }}
      run_constrained:
        # using run_constrained temporarily
        # until rasa is made available on
        # conda-forge channel.
        - rasa {{ libver_rasa }}
    test:
      imports:
        - {{ name_ }}
      commands:
        - pip check
      requires:
        - pip
  {% endwith %}
  {% endif %}
  {% endif %}
  
  ### fasttext_packages
  {% if use_fasttext_packages is defined %}
  {% if use_fasttext_packages or use_all_subpackages %}
  {% with subpackage_id = "fasttext" %}
  - name: {{ name_ }}-{{ subpackage_id }}
    build:
      ## NOTE: fasttext in NOT available for windows on conda-forge
      ## skip: True  # [win]
      noarch: generic
      string: {{ build_num }}_{{ subpackage_id }}_extra
    requirements:
      run:
        # RECIPE: 
        # "fasttext": base_packages + fasttext_packages
        - {{ name_ }} {{ version }}
        - fasttext {{ libver_fasttext }}
    test:
      imports:
        - {{ name_ }}
      commands:
        - pip check
      requires:
        - pip
  {% endwith %}
  {% endif %}
  {% endif %}
  
  ### spacy_packages
  {% if use_spacy_packages is defined %}
  {% if use_spacy_packages or use_all_subpackages %}
  {% with subpackage_id = "spacy" %}
  - name: {{ name_ }}-{{ subpackage_id }}
    build:
      noarch: generic
      string: {{ build_num }}_{{ subpackage_id }}_extra
    requirements:
      run:
        # RECIPE: 
        # "spacy": base_packages + spacy_packages
        - {{ name_ }} {{ version }}
        - spacy {{ libver_spacy }}
        - spacy-lookups-data {{ libver_spacy_lookups_data }}
    test:
      imports:
        - {{ name_ }}
      commands:
        - pip check
      requires:
        - pip
  {% endwith %}
  {% endif %}
  {% endif %}
  
  # s2v_packages
  {% if use_s2v_packages is defined %}
  {% if use_s2v_packages or use_all_subpackages %}
  {% with subpackage_id = "sense2vec" %}
  - name: {{ name_ }}-{{ subpackage_id }}
    build:
      noarch: generic
      string: {{ build_num }}_{{ subpackage_id }}_extra
    requirements:
      run:
        # RECIPE: 
        # s2v_packages = ["sense2vec>=1.0.2"] + spacy_packages
        # "sense2vec": base_packages + s2v_packages
        - {{ pin_subpackage(name_ ~ "-spacy", exact=True) }}
        - sense2vec {{ libver_sense2vec }}
    test:
      imports:
        - {{ name_ }}
      commands:
        - pip check
      requires:
        - pip
  {% endwith %}
  {% endif %}
  {% endif %}

  ### tf_packages
  {% if use_tf_packages is defined %}
  {% if use_tf_packages or use_all_subpackages %}
  {% with subpackage_id = "tfhub" %}
  - name: {{ name_ }}-{{ subpackage_id }}
    build:
      # NOTE: this throws error for windows build.
      ## skip: True  # [win]
      noarch: generic
      string: {{ build_num }}_{{ subpackage_id }}_extra
    requirements:
      run:
        # RECIPE: 
        # "tfhub": base_packages + tf_packages
        - {{ name_ }} {{ version }}
        - tensorflow {{ libver_tensorflow }}
        - tensorflow-hub {{ libver_tensorflow_hub }}
        # Adding the follwoing temporarily to fix a 
        # tensorflow-dependency version-mismatch issue.
        - absl-py {{ "~=0.10" }}
        - wrapt {{ "~=1.12.1" }}
      run_constrained:
        # NOTE: tensorflow-text is not available on conda-forge
        - tensorflow-text {{ libver_tensorflow_text }}
    test:
      imports:
        - {{ name_ }}
      # commands:
      #   - pip check  # [not win]
      # requires:
      #   - pip
  {% endwith %}
  {% endif %}
  {% endif %}

  ### transformers_dep
  {% if use_transformers_dep is defined %}
  {% if use_transformers_dep or use_all_subpackages %}
  {% with subpackage_id = "transformers" %}
  - name: {{ name_ }}-{{ subpackage_id }}
    build:
      # NOTE: this throws error for windows build.
      ## skip: True  # [win]
      noarch: generic
      string: {{ build_num }}_{{ subpackage_id }}_extra
    requirements:
      run:
        # RECIPE: 
        # "transformers": base_packages + transformers_dep
        - {{ name_ }} {{ version }}
        - transformers {{ libver_transformers }}
    test:
      imports:
        - {{ name_ }}
      commands:
        - pip check  # [not win]
      requires:
        - pip
  {% endwith %}
  {% endif %}
  {% endif %}

  # sentence_tfm_dep
  # {% if use_sentence_tfm_dep is defined %}
  # {% if use_sentence_tfm_dep or use_all_subpackages %}
  # {% with subpackage_id = "sentence_tfm" %}
  # - name: {{ name_ }}-{{ subpackage_id }}
  #   build:
  #     # NOTE: this throws error for windows build.
  #     ## skip: True  # [win]
  #     noarch: generic
  #     string: {{ build_num }}_{{ subpackage_id }}_extra
  #   requirements:
  #     run:
  #       # RECIPE: 
  #       # "transformers": base_packages + sentence_tfm_dep
  #       - {{ name_ }} {{ version }}
  #       - sentence-transformers {{ libver_sentence_transformers }}
  #   test:
  #     imports:
  #       - {{ name_ }}
  #     commands:
  #       - pip check  # [not win]
  #     requires:
  #       - pip
  # {% endwith %}
  # {% endif %}
  # {% endif %}
  {% import 'subpackages.yaml' as subpkgs with context %}
  {{ subpkgs.embed_sentence_tfm_subpackage() }}

about:
  home: https://rasahq.github.io/whatlies/
  summary: Tools to help uncover `whatlies` in word embeddings.
  license: Apache-2.0
  license_file: LICENSE
  description: |
    This small library offers tools to make visualisation 
    easier of both word embeddings as well as operations 
    on them.
  doc_url: https://rasahq.github.io/whatlies/
  dev_url: https://github.com/RasaHQ/whatlies/

extra:
  recipe-maintainers:
    - sugatoray
    #- koaning
  feedstock-name: {{ name_ }}
